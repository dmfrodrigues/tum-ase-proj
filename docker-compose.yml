version: "3.9"

services:
  router:
    build: router
    ports:
      - 8000:80

  frontend:
    build: frontend
    ports:
      - 8001:3000

  delivery:
    container_name: delivery
    build:
      context: backend
      dockerfile: delivery.Dockerfile
    depends_on:
      db:
        condition: service_healthy
    ports:
      - 8002:80
    environment:
      FRONTEND_ADDRESS: http://localhost
      MONGO_INITDB_ROOT_PASSWORD: password
      EMAIL_HOST: mailhog
      EMAIL_PORT: 1025
      EMAIL_ADDRESS: asedelivery@mailhog.com
      EMAIL_USERNAME: user123
      EMAIL_PASSWORD: 1234
    volumes:
      - ./backend/delivery/src:/app/delivery/src
      - ./backend/delivery/build.gradle:/app/delivery/build.gradle
      - ./backend/library/src:/app/library/src
      - ./backend/library/build.gradle:/app/library/build.gradle
    command: ["/run.dev.sh", "delivery"]
  
  auth:
    container_name: auth
    build:
      context: backend
      dockerfile: auth.Dockerfile
    depends_on:
      db:
        condition: service_healthy
    ports:
      - 8003:80
    environment:
      FRONTEND_ADDRESS: http://localhost
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - ./backend/auth/src:/app/auth/src
      - ./backend/auth/build.gradle:/app/auth/build.gradle
      - ./backend/library/src:/app/library/src
      - ./backend/library/build.gradle:/app/library/build.gradle
    command: ["/run.dev.sh", "auth"]


  db:
    image: mongo:6.0
    ports:
      - 8004:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
    healthcheck:
      test: test -f healthcheck.txt || (echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet && touch healthcheck.txt)
      interval: 10s
      timeout: 10s
      retries: 5
    logging:
      driver: none
  
  db-seed:
    build: db/seed
    depends_on:
      db:
        condition: service_healthy
    environment:
      MONGO_HOST: db
      MONGO_DB: asedelivery
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password

  db-admin:
    image: mongo-express:latest
    restart: always
    depends_on:
      db:
        condition: service_healthy
    ports:
      - 8005:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_MONGODB_URL: mongodb://root:password@db:27017/
    logging:
      driver: none

  mailhog:
    build: mailhog
    ports:
      - 8025:8025
    logging:
      driver: none
