variables:
  CI_REPO: $CI_REGISTRY/ase-22-23/team15/tum-ase-proj

## Login to Container Registry
.login-cr:
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_JOB_TOKEN $CI_REGISTRY

## Login to deployment environment via SSH
.login-deploy:
  before_script:
    - eval "$(ssh-agent -s)"
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'

## Build images and push to CR
build-api-gateway:
  stage: build
  extends: .login-cr
  rules:
    - if: $CI_COMMIT_BRANCH == "master"
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
  script:
    - docker build -t $CI_REPO/api-gateway:$CI_COMMIT_SHA backend --target api-gateway-prod
    - docker push $CI_REPO/api-gateway:$CI_COMMIT_SHA

build-service-registry:
  stage: build
  extends: .login-cr
  rules:
    - if: $CI_COMMIT_BRANCH == "master"
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
  script:
    - docker build -t $CI_REPO/service-registry:$CI_COMMIT_SHA backend --target service-registry-prod
    - docker push $CI_REPO/service-registry:$CI_COMMIT_SHA

.build-frontend:
  stage: build
  extends: .login-cr
  rules:
    - if: $CI_COMMIT_BRANCH == "master"
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
  script:
    - docker build -t $CI_REPO/frontend:$CI_COMMIT_SHA frontend --target frontend-prod
    - docker push $CI_REPO/frontend:$CI_COMMIT_SHA

build-auth:
  stage: build
  extends: .login-cr
  rules:
    - if: $CI_COMMIT_BRANCH == "master"
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
  script:
    - docker build -t $CI_REPO/auth:$CI_COMMIT_SHA backend --target auth-prod
    - docker push $CI_REPO/auth:$CI_COMMIT_SHA

build-delivery:
  stage: build
  extends: .login-cr
  rules:
    - if: $CI_COMMIT_BRANCH == "master"
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
  script:
    - docker build -t $CI_REPO/delivery:$CI_COMMIT_SHA backend --target delivery-prod
    - docker push $CI_REPO/delivery:$CI_COMMIT_SHA

build-db-seed:
  stage: build
  extends: .login-cr
  rules:
    - if: $CI_COMMIT_BRANCH == "master"
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
  script:
    - docker build -t $CI_REPO/db-seed:$CI_COMMIT_SHA db/seed
    - docker push $CI_REPO/db-seed:$CI_COMMIT_SHA

## Deploy
.deploy:
  stage: deploy
  extends: .login-deploy
  script:
    - scp docker-compose.prod.yml $USER@$HOST:$DEPLOYMENT_PATH/docker-compose.yml
    - |
      ssh $USER@$HOST "
        cd $DEPLOYMENT_PATH &&
        rm .env &&
        echo "TAG=$CI_COMMIT_SHA" >> .env &&
        cat .env.prod >> .env &&
        docker-compose pull &&
        docker-compose down --remove-orphans &&
        docker-compose up -d --scale db-seed=0 &&
        echo \"Last updated: $(date --utc +'%Y-%m-%d %T') UTC<br>Commit SHA: $CI_COMMIT_SHA\" | sudo tee /var/www/html/info.html
      "

## Deploy to staging
.deploy-stag:
  stage: deploy
  when: manual
  extends: .deploy
  variables:
    SSH_PRIVATE_KEY: $SSH_PRIVATE_KEY_STAG
    USER: ubuntu
    HOST: 138.246.237.201
    DEPLOYMENT_PATH: /deployments/stag
  script:
    - !reference [.deploy, script]

## Deploy to production
deploy-prod:
  stage: deploy
  rules:
    - if: $CI_COMMIT_BRANCH == "master"
  extends: .deploy
  variables:
    SSH_PRIVATE_KEY: $SSH_PRIVATE_KEY_PROD
    USER: ubuntu
    HOST: 138.246.237.201
    DEPLOYMENT_PATH: /deployments/prod
  script:
    - !reference [.deploy, script]

## Seed
.seed:
  stage: deploy
  extends: .login-deploy
  script:
    - scp docker-compose.prod.yml $USER@$HOST:$DEPLOYMENT_PATH/docker-compose.yml
    - |
      ssh $USER@$HOST "
        cd $DEPLOYMENT_PATH &&
        rm .env &&
        echo "TAG=$CI_COMMIT_SHA" >> .env &&
        cat .env.prod >> .env &&
        docker-compose pull &&
        docker-compose up -d --scale db-seed=1
      "

## Seed staging
.seed-stag:
  stage: deploy
  when: manual
  extends: .seed
  variables:
    SSH_PRIVATE_KEY: $SSH_PRIVATE_KEY_STAG
    USER: ubuntu
    HOST: 138.246.237.201
    DEPLOYMENT_PATH: /deployments/stag
  script:
    - !reference [.seed, script]

## Seed production
seed-prod:
  stage: deploy
  when: manual
  rules:
    - if: $CI_COMMIT_BRANCH == "master"
  extends: .seed
  variables:
    SSH_PRIVATE_KEY: $SSH_PRIVATE_KEY_PROD
    USER: ubuntu
    HOST: 138.246.237.201
    DEPLOYMENT_PATH: /deployments/prod
  script:
    - !reference [.seed, script]
